{"version":3,"sources":["api/fetchWeather.js","App.jsx","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","appid","data","App","dt","timezone","useState","setQuery","weather","setWeather","error","setError","search","e","key","className","name","Date","toLocaleDateString","main","Math","round","temp","width","height","style","verticalAlign","d","stroke","strokeWidth","fill","wind","speed","cx","cy","r","humidity","description","type","placeholder","value","onChange","target","onKeyPress","marginTop","hour","getHours","getGreeting","toLocaleTimeString","minute","feels_like","sys","sunrise","sunset","pressure","visibility","clouds","all","ReactDOM","render","document","getElementById"],"mappings":"kMAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACHC,IAAMC,IAJnB,kDAI4B,CACpCC,OAAQ,CACNC,EAAGL,EACHM,MAAO,SACPC,MAPS,sCAEa,uBAClBC,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sD,eCgNVC,EAjNH,WACV,IAkBuBC,EAAIC,EAlB3B,EAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAA8BD,mBAAS,MAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAM,uCAAG,WAAOC,GAAP,eAAAlB,EAAA,yDACC,UAAVkB,EAAEC,IADO,wBAEXH,EAAS,IAFE,kBAIUlB,EAAaC,GAJvB,OAIHQ,EAJG,OAKTO,EAAWP,GACXK,EAAS,IANA,kDAQTE,EAAW,MACXE,EAAS,wCATA,0DAAH,sDAkCZ,OACE,qBAAKI,UAAU,iBAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,mBAAf,SACGP,GAAWA,EAAQQ,KAAOR,EAAQQ,KAAO,SAE5C,qBAAKD,UAAU,eAAf,SACGP,GAAWA,EAAQJ,IAAMI,EAAQH,UA7BvBD,EA8BOI,EAAQJ,GA9BXC,EA8BeG,EAAQH,SA7B3CD,GAAOC,EACC,IAAIY,KAAuB,KAAjBb,EAAKC,GAAmB,MACnCa,qBAFiB,KA8Bf,IAAID,MAAOC,0BAGnB,sBAAKH,UAAU,iBAAf,UACE,sBAAKA,UAAU,eAAf,UACGP,GAAWA,EAAQW,KAAOC,KAAKC,MAAMb,EAAQW,KAAKG,MAAQ,KAC3D,sBAAMP,UAAU,cAAhB,qBAEF,qBAAKA,UAAU,eAAf,SACGP,GAAWA,EAAQA,QAAUA,EAAQA,QAAQ,GAAGW,KAAO,SAE1D,sBAAKJ,UAAU,gBAAf,UACE,iCACE,qBAAKQ,MAAM,KAAKC,OAAO,KAAKC,MAAO,CAAEC,cAAe,UAApD,SACE,sBACEC,EAAE,iBACFC,OAAO,OACPC,YAAY,IACZC,KAAK,WAGRtB,GAAWA,EAAQuB,KAAnB,UAA6BvB,EAAQuB,KAAKC,MAA1C,QAAwD,QAE3D,iCACE,sBAAKT,MAAM,KAAKC,OAAO,KAAKC,MAAO,CAAEC,cAAe,UAApD,UACE,wBACEO,GAAG,IACHC,GAAG,IACHC,EAAE,IACFP,OAAO,OACPC,YAAY,IACZC,KAAK,SAEP,sBACEH,EAAE,aACFC,OAAO,OACPC,YAAY,IACZC,KAAK,YAGRtB,GAAWA,EAAQW,KAAnB,UAA6BX,EAAQW,KAAKiB,SAA1C,MAAyD,cAIhE,qBAAKrB,UAAU,gBAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,sBAAf,mBACA,sBAAKA,UAAU,qBAAf,UACGP,GAAWA,EAAQW,KAAOC,KAAKC,MAAMb,EAAQW,KAAKG,MAAQ,KAD7D,UAIA,qBAAKP,UAAU,qBAAf,SACGP,GAAWA,EAAQA,QAChBA,EAAQA,QAAQ,GAAG6B,YACnB,UAIV,uBACEC,KAAK,OACLC,YAAY,mBACZxB,UAAU,SACVyB,MAAO9C,EACP+C,SAAU,SAAC5B,GAAD,OAAON,EAASM,EAAE6B,OAAOF,QACnCG,WAAY/B,EACZa,MAAO,CAAEmB,UAAW,MAErBlC,GAAS,qBAAKK,UAAU,gBAAf,SAAgCL,OAE5C,sBAAKK,UAAU,eAAf,UACE,qBAAKA,UAAU,mBAAf,SAxFY,WAClB,IAAM8B,GAAO,IAAI5B,MAAO6B,WACxB,OAAID,EAAO,GAAW,eAClBA,EAAO,GAAW,iBACf,eAoFkCE,KACnC,qBAAKhC,UAAU,eAAf,UA/FC,IAAIE,MAAO+B,mBAAmB,GAAI,CACvCH,KAAM,UACNI,OAAQ,cA8FJ,sBAAKlC,UAAU,oBAAf,UACGP,GAAWA,EAAQW,KAAOC,KAAKC,MAAMb,EAAQW,KAAKG,MAAQ,KAD7D,OAGE,sBAAMP,UAAU,oBAAhB,SACGP,GAAWA,EAAQuB,KAClB,qCACE,qBACER,MAAM,KACNC,OAAO,KACPC,MAAO,CAAEC,cAAe,UAH1B,SAKE,sBACEC,EAAE,UACFC,OAAO,OACPC,YAAY,IACZC,KAAK,WAGRtB,EAAQuB,KAAKC,MAbhB,UAeE,OAEN,sBAAMjB,UAAU,wBAAhB,SACGP,GAAWA,EAAQW,KAClB,qCACE,qBACEI,MAAM,KACNC,OAAO,KACPC,MAAO,CAAEC,cAAe,UAH1B,SAKE,wBACEO,GAAG,IACHC,GAAG,IACHC,EAAE,IACFP,OAAO,OACPC,YAAY,IACZC,KAAK,WAGRtB,EAAQW,KAAKiB,SAfhB,QAiBE,UAGR,qBAAKrB,UAAU,qBAAf,SACGP,GAAWA,EAAQW,KAAnB,qBACiBC,KAAKC,MAAMb,EAAQW,KAAK+B,YADzC,QAEG,KAEN,qBAAKnC,UAAU,oBAAf,SACGP,GAAWA,EAAQA,QAAUA,EAAQA,QAAQ,GAAG6B,YAAc,KAGjE,sBAAKtB,UAAU,uBAAf,UACE,gCACE,8CAA0B,IACzBP,GAAWA,EAAQ2C,IAChB,IAAIlC,KAA2B,IAAtBT,EAAQ2C,IAAIC,SAAgBJ,qBACrC,QAEN,gCACE,6CAAyB,IACxBxC,GAAWA,EAAQ2C,IAChB,IAAIlC,KAA0B,IAArBT,EAAQ2C,IAAIE,QAAeL,qBACpC,QAEN,gCACE,+CAA2B,IAC1BxC,GAAWA,EAAQW,KAAnB,UAA6BX,EAAQW,KAAKmC,SAA1C,QAA2D,QAE9D,gCACE,iDAA6B,IAC5B9C,GAAWA,EAAQ+C,WAAnB,UACM/C,EAAQ+C,WAAa,IAD3B,OAEG,QAEN,gCACE,6CAAyB,IACxB/C,GAAWA,EAAQgD,OAAnB,UAA+BhD,EAAQgD,OAAOC,IAA9C,KAAuD,oBCxMtEC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.45b0a4fc.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\nconst APIKey = \"6e52daf8438d59fb4873293fd664ddc4\";\n\nexport const fetchWeather = async (query) => {\n  const { data } = await axios.get(URL, {\n    params: {\n      q: query,\n      units: \"metric\",\n      appid: APIKey,\n    },\n  });\n  return data;\n};\n","import React, { useState } from \"react\";\nimport { fetchWeather } from \"./api/fetchWeather\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const search = async (e) => {\n    if (e.key === \"Enter\") {\n      setError(\"\");\n      try {\n        const data = await fetchWeather(query);\n        setWeather(data);\n        setQuery(\"\");\n      } catch (err) {\n        setWeather(null);\n        setError(\"Stad niet gevonden. Probeer opnieuw.\");\n      }\n    }\n  };\n\n  const getDateString = (dt, timezone) => {\n    if (!dt || !timezone) return \"\";\n    const date = new Date((dt + timezone) * 1000 - 3600 * 1000);\n    return date.toLocaleDateString();\n  };\n\n  const getTimeString = () => {\n    return new Date().toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n\n  const getGreeting = () => {\n    const hour = new Date().getHours();\n    if (hour < 12) return \"Good Morning\";\n    if (hour < 18) return \"Good Afternoon\";\n    return \"Good Evening\";\n  };\n\n  return (\n    <div className=\"weather-app-bg\">\n      <div className=\"weather-app-container\">\n        <div className=\"weather-main\">\n          <div className=\"weather-header\">\n            <div className=\"weather-location\">\n              {weather && weather.name ? weather.name : \"Stad\"}\n            </div>\n            <div className=\"weather-date\">\n              {weather && weather.dt && weather.timezone\n                ? getDateString(weather.dt, weather.timezone)\n                : new Date().toLocaleDateString()}\n            </div>\n          </div>\n          <div className=\"weather-center\">\n            <div className=\"weather-temp\">\n              {weather && weather.main ? Math.round(weather.main.temp) : \"--\"}\n              <span className=\"weather-deg\">&deg;</span>\n            </div>\n            <div className=\"weather-desc\">\n              {weather && weather.weather ? weather.weather[0].main : \"Weer\"}\n            </div>\n            <div className=\"weather-extra\">\n              <span>\n                <svg width=\"18\" height=\"18\" style={{ verticalAlign: \"middle\" }}>\n                  <path\n                    d=\"M2 9h14M9 2v14\"\n                    stroke=\"#888\"\n                    strokeWidth=\"2\"\n                    fill=\"none\"\n                  />\n                </svg>\n                {weather && weather.wind ? `${weather.wind.speed} m/s` : \"--\"}\n              </span>\n              <span>\n                <svg width=\"18\" height=\"18\" style={{ verticalAlign: \"middle\" }}>\n                  <circle\n                    cx=\"9\"\n                    cy=\"9\"\n                    r=\"7\"\n                    stroke=\"#888\"\n                    strokeWidth=\"2\"\n                    fill=\"none\"\n                  />\n                  <path\n                    d=\"M9 4v5l3 3\"\n                    stroke=\"#888\"\n                    strokeWidth=\"2\"\n                    fill=\"none\"\n                  />\n                </svg>\n                {weather && weather.main ? `${weather.main.humidity} %` : \"--\"}\n              </span>\n            </div>\n          </div>\n          <div className=\"weather-today\">\n            <div className=\"weather-today-box\">\n              <div className=\"weather-today-label\">Today</div>\n              <div className=\"weather-today-temp\">\n                {weather && weather.main ? Math.round(weather.main.temp) : \"--\"}\n                &deg;\n              </div>\n              <div className=\"weather-today-desc\">\n                {weather && weather.weather\n                  ? weather.weather[0].description\n                  : \"\"}\n              </div>\n            </div>\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Zoek een stad...\"\n            className=\"search\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            onKeyPress={search}\n            style={{ marginTop: 32 }}\n          />\n          {error && <div className=\"weather-error\">{error}</div>}\n        </div>\n        <div className=\"weather-side\">\n          <div className=\"weather-greeting\">{getGreeting()}</div>\n          <div className=\"weather-time\">{getTimeString()}</div>\n          <div className=\"weather-side-temp\">\n            {weather && weather.main ? Math.round(weather.main.temp) : \"--\"}\n            &deg;\n            <span className=\"weather-side-wind\">\n              {weather && weather.wind ? (\n                <>\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    style={{ verticalAlign: \"middle\" }}\n                  >\n                    <path\n                      d=\"M2 8h12\"\n                      stroke=\"#888\"\n                      strokeWidth=\"2\"\n                      fill=\"none\"\n                    />\n                  </svg>\n                  {weather.wind.speed} m/s\n                </>\n              ) : null}\n            </span>\n            <span className=\"weather-side-humidity\">\n              {weather && weather.main ? (\n                <>\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    style={{ verticalAlign: \"middle\" }}\n                  >\n                    <circle\n                      cx=\"8\"\n                      cy=\"8\"\n                      r=\"6\"\n                      stroke=\"#888\"\n                      strokeWidth=\"2\"\n                      fill=\"none\"\n                    />\n                  </svg>\n                  {weather.main.humidity} %\n                </>\n              ) : null}\n            </span>\n          </div>\n          <div className=\"weather-side-feels\">\n            {weather && weather.main\n              ? `Feels like ${Math.round(weather.main.feels_like)}°`\n              : \"\"}\n          </div>\n          <div className=\"weather-side-desc\">\n            {weather && weather.weather ? weather.weather[0].description : \"\"}\n          </div>\n          {}\n          <div className=\"weather-details-card\">\n            <div>\n              <strong>Sunrise:</strong>{\" \"}\n              {weather && weather.sys\n                ? new Date(weather.sys.sunrise * 1000).toLocaleTimeString()\n                : \"--\"}\n            </div>\n            <div>\n              <strong>Sunset:</strong>{\" \"}\n              {weather && weather.sys\n                ? new Date(weather.sys.sunset * 1000).toLocaleTimeString()\n                : \"--\"}\n            </div>\n            <div>\n              <strong>Pressure:</strong>{\" \"}\n              {weather && weather.main ? `${weather.main.pressure} hPa` : \"--\"}\n            </div>\n            <div>\n              <strong>Visibility:</strong>{\" \"}\n              {weather && weather.visibility\n                ? `${weather.visibility / 1000} km`\n                : \"--\"}\n            </div>\n            <div>\n              <strong>Clouds:</strong>{\" \"}\n              {weather && weather.clouds ? `${weather.clouds.all}%` : \"--\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.jsx\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}